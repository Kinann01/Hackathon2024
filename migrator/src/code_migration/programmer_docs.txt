Codebase Overview:

The project is a hotel management system (HMS) that allows users to manage guests, rooms, and reservations. It has a modular structure, with different modules for handling different aspects of the system. The main components of the project are:

1. config.py: Contains configurations and globals used throughout the project.
2. controller.py: Contains functions for interacting with the database, such as adding, updating, and deleting records.
3. gui/: Contains the graphical user interface (GUI) components of the project. It has a main_window package that contains the main application window and its components, and a login package that contains the login window.

Component Documentation:

config.py:

Component Overview:
This file contains configurations and globals used throughout the project.

API Documentation:

* `config`: A dictionary containing configurations for the database connection.

controller.py:

Component Overview:
This file contains functions for interacting with the database, such as adding, updating, and deleting records.

API Documentation:

* `checkUser(username, password=None)`: Checks if a user exists in the database with the given username and password.
* `human_format(num)`: Formats a number as a string with a suffix indicating its magnitude (e.g., "1K" for 1000).
* `updatePassword(username, sec_ans, sec_que, password)`: Updates a user's password in the database.
* `updateUsername(oldusername, password, newusername)`: Updates a user's username in the database.
* `find_g_id(name)`: Finds a guest's ID in the database given their name.
* `checkin(g_id)`: Checks a guest in for a reservation in the database.
* `checkout(id)`: Checks a guest out of a reservation in the database.
* `acceptable(*args, acceptables)`: Checks if all the characters in the given strings are in the given set of acceptable characters.
* `get_guests()`: Retrieves all guests from the database.
* `add_guest(name, address, email_id, phone)`: Adds a new guest to the database.
* `add_room(room_no, price, room_type)`: Adds a new room to the database.
* `get_rooms()`: Retrieves all rooms from the database.
* `get_reservations()`: Retrieves all reservations from the database.
* `add_reservation(g_id, meal, r_id, check_in="now")`: Adds a new reservation to the database.
* `get_total_rooms()`: Retrieves the total number of rooms in the database.
* `booked()`: Retrieves the number of booked rooms in the database.
* `vacant()`: Retrieves the number of vacant rooms in the database.
* `bookings()`: Retrieves the number of bookings for each room type in the database.
* `get_total_hotel_value()`: Retrieves the total value of all rooms in the database.
* `delete_reservation(id)`: Deletes a reservation from the database.
* `delete_room(id)`: Deletes a room from the database.
* `delete_guest(id)`: Deletes a guest from the database.
* `update_rooms(id, room_no, room_type, price)`: Updates a room in the database.
* `update_guests(name, address, id, phone)`: Updates a guest in the database.
* `update_reservations(g_id, check_in, room_id, reservation_date, check_out, meal, type, id)`: Updates a reservation in the database.
* `meals()`: Retrieves the total number of meals booked in the database.
* `update_reservation(id, g_id, check_in, room_id, check_out, meal)`: Updates a reservation in the database.

gui/main\_window/\_\_init\_\_.py:

Component Overview:
This file is an empty package initialization file.

gui/main\_window/main.py:

Component Overview:
This file contains the main application window for the HMS.

API Documentation:

* `MainWindow`: A class representing the main application window.

gui/main\_window/dashboard/gui.py:

Component Overview:
This file contains the dashboard window for the HMS.

API Documentation:

* `Dashboard`: A class representing the dashboard window.

gui/main\_window/reservations/\_\_init\_\_.py:

Component Overview:
This file is an empty package initialization file.

gui/main\_window/reservations/main.py:

Component Overview:
This file contains the reservations window for the HMS.

API Documentation:

* `Reservations`: A class representing the reservations window.

gui/main\_window/reservations/add\_reservations/gui.py:

Component Overview:
This file contains the add reservations window for the HMS.

API Documentation:

* `AddReservations`: A class representing the add reservations window.

gui/main\_window/reservations/view\_reservations/main.py:

Component Overview:
This file contains the view reservations window for the HMS.

API Documentation:

* `ViewReservations`: A class representing the view reservations window.

gui/main\_window/reservations/update\_reservation/main.py:

Component Overview:
This file contains the update reservation window for the HMS.

API Documentation:

* `UpdateReservations`: A class representing the update reservation window.

gui/main\_window/rooms/\_\_init\_\_.py:

Component Overview:
This file is an empty package initialization file.

gui/main\_window/rooms/main.py:

Component Overview:
This file contains the rooms window for the HMS.

API Documentation:

* `Rooms`: A class representing the rooms window.

gui
